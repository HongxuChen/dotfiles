# -*- mode:sh -*-
# vim:ft=zsh

MY_ROOT=~/RESEARCH
MY_HOME_BIN=~/.bin
MY_PY_PATH="$HOME/Library/Python/3.8"

export GOPATH=~/gocode

export JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"

export MY_BREW_PREFIX=/usr/local
export PATH="/usr/local/opt/coreutils/libexec/gnubin:/usr/sbin:/sbin:/usr/bin:/bin:/opt/local/bin"
export PATH="/usr/local/opt/binutils/bin:$PATH"
export PATH="${MY_HOME_BIN}:$PATH"
export PATH="${GOPATH}/bin:$PATH"
export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"
export PATH="${MY_BREW_PREFIX}/bin:${MY_BREW_PREFIX}/sbin:$PATH"
export PATH="/usr/local/texlive/2020/bin/x86_64-darwin:$PATH"
export PATH="${JAVA_HOME}/bin:$PATH"
export PATH="${MY_PY_PATH}/bin:$PATH"

source ${MY_BREW_PREFIX}/share/zsh-history-substring-search/zsh-history-substring-search.zsh

MY_CARGO=${HOME}/.cargo
export CARGO_INCREMENTAL=1
export PATH=${MY_CARGO}/bin:$PATH

if which rustc > /dev/null; then
	export RUST_SRC_PATH=$(rustc --print sysroot)/lib/rustlib/src/rust/src
fi

export MONO_GAC_PREFIX="/usr/local"

export LD_LIBRARY_PATH=
export LD_LIBRARY_PATH=/usr/local/opt/llvm/lib

# export CPLUS_INCLUDE_PATH=
# export CPLUS_INCLUDE_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1
# export CPLUS_INCLUDE_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include:${CPLUS_INCLUDE_PATH}
# export C_INCLUDE_PATH=

export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# yarn
YARN_G_BIN=${HOME}/.yarn/bin
export PATH="${YARN_G_BIN}:$PATH"

# for wllvm
export LLVM_COMPILER=clang
export WLLVM_OUTPUT=INFO

export CC=clang
export CXX=clang++

export OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include
export DEP_OPENSSL_INCLUDE=/usr/local/opt/openssl/include
export OPENSSL_ROOT_DIR=/usr/local/opt/openssl
