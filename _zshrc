# -*- mode:zsh -*-
#  vim: set ft=zsh ts=4 sw=2 tw=0 et :
#

# function time_it() {
#   local start=$SECONDS ts ec
#   printf -v ts '%(%Y-%m-%d_%H:%M:%S)T' -1
#   printf '%s\n' "$ts Starting $*"
#   "$@"; ec=$?
#   printf -v ts '%(%Y-%m-%d_%H:%M:%S)T' -1
#   printf '%s\n' "$ts Finished $*; elapsed = $((SECONDS-start)) seconds"
#   # make sure to return the exit code of the command so that the caller can use it
#   return "$ec"
# }

function time_it() {
  s=$(date +%s.%N)
  $@
  RC=$?
  duration=$[$(date +%s.%N)-$s]
  printf "%6.3f%5s%-3d%s\n" "${duration}" "s RC=" "$RC" "\"$*\"" >&2
  return $rc
}

ZSH=~/.omz

# ZSH_THEME="bira"
ZSH_THEME="nanotech"

time_it source ~/.profile
time_it source ~/.zlocal
time_it source ~/.aliases

eval $(dircolors ~/.LS_COLORS)

### should be loaded before source ${ZSH}/lib
autoload -Uz compinit
compinit -i
autoload -Uz compdef

# ~/.omz/plugins/
PLUGINS=(gem git-extras pip golang mvn yarn sbt bazel)
if [[ $OSTYPE == "linux-gnu" ]];then
    PLUGINS=(${PLUGINS} docker zsh-history-substring-search)
elif [[ $OSTYPE == "darwin"* ]];then
    PLUGINS=(${PLUGINS} vagrant brew-cask brew)
fi

if [[ -z "$ZSH_CACHE_DIR"  ]]; then
  ZSH_CACHE_DIR="$ZSH/cache"
fi

for plugin in ${PLUGINS}; do
    base_dir=${ZSH}/plugins/${plugin}
    if [[ -f ${base_dir}/${plugin}.plugin.zsh ]] || [[ -f ${base_dir}/_${plugin} ]];then
        if [[ -f ${base_dir}/${plugin}.plugin.zsh ]];then
            source ${base_dir}/${plugin}.plugin.zsh
        fi
        if [[ -f ${base_dir}/_${plugin} ]];then
            fpath=(${fpath} ${base_dir})
        fi
    else
        printf "${base_dir} not plugin\n"
    fi
done
unset plugin base_dir

ZSH_COMPLETIONS=${ZSH}/completions
fpath=(${fpath} ${ZSH_COMPLETIONS})

for config_file in ${ZSH}/lib/*.zsh; do
    source ${config_file}
done
unset config_file

# sources

source "$ZSH/themes/${ZSH_THEME}.zsh-theme"

if [[ -d ${MY_BREW_PREFIX} ]];then
  # source ${MY_BREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  source ${MY_BREW_PREFIX}/share/zsh-history-substring-search/zsh-history-substring-search.zsh
fi
## Ctrl-p/Ctrl-n for Emacs/viins mode
bindkey -M emacs '^p' history-substring-search-up
bindkey -M emacs '^n' history-substring-search-down
bindkey -M viins '^p' history-substring-search-up
bindkey -M viins '^n' history-substring-search-down
## k and j for VI mode
bindkey -M vicmd 'k'  history-substring-search-up
bindkey -M vicmd 'j'  history-substring-search-down


unset ZSH

# load executable
# (pgrep -x rdm >/dev/null || rdm --no-comment &>/tmp/rdm_answer &)

autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit
# eval "$(stack --bash-completion-script stack)"
